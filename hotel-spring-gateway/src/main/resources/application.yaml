server:
  port: 7777
spring:
  resilience4j.circuitbreaker:
   instances:
    hotelsCircuiteBreaker:
     registerHealthIndicator: true
     slidingWindowSize: 3
     failureRateThreshold: 80
     waitDurationInOpenState: 10s
     permittedNumberOfCallsInHalfOpenState: 3
     minimumNumberOfCalls: 2
  cloud:
      gateway:
        routes:
        - id: HOTEL-SERVICE
          uri: ${hotel_managment_url:http://localhost:8083}
          predicates:
          - Path=/hotels
          filters:
          - RewritePath=/hotels,/
        - id: HOTEL-SERVICE-SEGMENT
          uri: ${hotel_managment_url:http://localhost:8083}
          predicates:
          - Path=/hotels/**
          filters:
          - RewritePath=/hotels/(?<segment>.*),/$\{segment}
          - name: CircuitBreaker
            args:
             name: hotelsCircuiteBreaker
             fallbackUri: forward:/fallback
        - id: countries-sevices
          uri: ${countries_url:http://localhost:8082}
          predicates:
          - Path=/countries
          filters:
          - RewritePath=/countries,/
        - id: hotels_user_search
          uri: ${hotels_user_search_url:grpc://localhost:9000}
          predicates:
          - Path=/user/hotels/search
          filters:
          - name: JsonToGrpc
            args:
             protoDescriptor: file:proto/hotelSearch.pb
             protoFile: file:proto/hotelSearch.proto
             service: HotelSearchService
             method: findHotel
        
